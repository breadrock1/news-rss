name: "Create release"
on:
  push:
    branches:
      - "master"
      - "release/**"

jobs:
  create-release:
    name: create release
    runs-on: ubuntu-latest
    permissions:
      contents: write

    outputs:
      version_output: ${{ steps.version.outputs.project_version }}
      upload_url_output: ${{ steps.release.outputs.upload_url }}

    steps:
      - uses: actions/checkout@v4

      - name: Get project version
        id: version
        run: |
          VERSION=$(cargo metadata --format-version=1 | jq '.packages[] | select(.name=="news-rss").version')
          echo "project_version=$VERSION" | grep -E '\d\.\d\.\d' >> $GITHUB_OUTPUT

      - name: Create github release
        id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: false
          prerelease: false
          body_path: CHANGELOG.md
          tag_name: news-rss-${{ steps.version.outputs.project_version }}
          release_name: news-rss-${{ steps.version.outputs.project_version }}

  build:
    name: build project
    runs-on: ubuntu-latest
    needs: create-release
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Build rust library
        run: cargo build --release

      - name: Create archive
        uses: vimtor/action-zip@5f1c4aa587ea41db1110df6a99981dbe19cee310
        with:
          files: ./target
          dest: news-rss-${{ needs.create-release.outputs.version_output }}.zip
          recursive: true

      - name: Upload linux artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url_output }}
          asset_name: news-rss-${{ needs.create-release.outputs.version_output }}.zip
          asset_path: ./news-rss-${{ needs.create-release.outputs.version_output }}.zip
          asset_content_type: application/zip
